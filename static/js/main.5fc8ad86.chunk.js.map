{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["size","result","App","state","boardInput","pawnInput","pawnArrX","pawnArrY","onInputChange","type","e","setState","target","value","onDrawBoard","onAddPawn","resultDiv","document","getElementById","childNodes","length","removeChild","lastChild","onDrawPawn","pawn","i","pawnX","pawnY","joinedX","concat","Number","joinedY","pawnDiv","hasChildNodes","pawnDesc","createElement","setAttribute","innerText","appendChild","spanOpen","comma","spanClose","pawnInput1","pawnInput2","pawnBtn","onclick","board","arrX","arrY","canvas","ctx","getContext","width","height","moveTo","lineTo","j","font","fillText","undefined","style","display","n","fillStyle","fillRect","y","animation","setInterval","clearInterval","strokeStyle","lineWidth","stroke","onShowResult","count","forEach","item","data","onVisualClick","total","start","end","push","m","AstarAlgorithm","execute","totalArr","current","open","close","minmin","splice","a","b","c","f","min","d","Math","abs","className","onChange","this","bind","id","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5fc8ad86.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst size = 70;\nvar result = [];\n\nclass App extends Component {\n\n  state = {\n    boardInput: 0,\n    pawnInput: 0,\n    pawnArrX: [],\n    pawnArrY: []\n  }\n\n\n  onInputChange = (type, e) => {\n    if (type === 'board') {\n      this.setState({ boardInput: e.target.value});\n      this.onDrawBoard(e.target.value);\n    }\n    else if (type === 'pawn') {\n      this.setState({ pawnInput: e.target.value, pawnArrX: [], pawnArrY: [] });\n      this.onAddPawn(e.target.value);\n      this.onDrawBoard(this.state.boardInput);\n\n      var resultDiv = document.getElementById('result');\n      while (resultDiv.childNodes.length > 1) {\n        resultDiv.removeChild(resultDiv.lastChild);\n      }\n    }\n  }\n\n  onDrawPawn = (pawn) => {\n\n    var resultDiv = document.getElementById('result');\n    while (resultDiv.childNodes.length > 1) {\n      resultDiv.removeChild(resultDiv.lastChild);\n    }\n\n    this.setState({ pawnArrX: [], pawnArrY: [] });\n    \n    for (var i = 0; i < pawn; i++) {\n      var pawnX = document.getElementById('pawnInput-' + i + '-0').value;\n      var pawnY = document.getElementById('pawnInput-' + i + '-1').value;\n\n      if (pawnX === '') {\n        document.getElementById('pawnInput-' + i + '-0').value = 0;\n        pawnX = 0;\n      }\n      if (pawnY === '') {\n        document.getElementById('pawnInput-' + i + '-1').value = 0;\n        pawnY = 0;\n      }\n\n      var joinedX = this.state.pawnArrX.concat(Number(pawnX));\n      var joinedY = this.state.pawnArrY.concat(Number(pawnY));\n\n      this.setState({ pawnArrX: joinedX, pawnArrY: joinedY });\n    }\n\n    this.onDrawBoard(this.state.boardInput, this.state.pawnArrX, this.state.pawnArrY);\n  }\n\n  onAddPawn = (pawn) => {\n\n    var pawnDiv = document.getElementById('pawnDiv');\n\n    // remove all child before rendering new pawns\n    while (pawnDiv.hasChildNodes()) {\n      pawnDiv.removeChild(pawnDiv.lastChild);\n    }\n\n    var pawnDesc = document.createElement('span');\n    pawnDesc.setAttribute('class', 'title');\n    pawnDesc.innerText = 'Location (x, y)';\n    pawnDesc.setAttribute('style', 'margin-right: 10px');\n\n    pawnDiv.appendChild(pawnDesc);\n    \n    for (var i = 0; i < pawn; i++) {\n      var spanOpen = document.createElement('span');\n      spanOpen.innerText = '[';\n\n      var comma = document.createElement('span');\n      comma.innerText = ', ';\n\n      var spanClose = document.createElement('span');\n      spanClose.innerText = '] ';\n\n      var pawnInput1 = document.createElement('input');\n      pawnInput1.setAttribute('type', 'number');\n      pawnInput1.setAttribute('class', 'pawnInput');\n      pawnInput1.setAttribute('min', 0);\n      pawnInput1.setAttribute('max', this.state.boardInput - 1);\n      pawnInput1.setAttribute('id', 'pawnInput-' + i + '-0');\n\n      var pawnInput2 = document.createElement('input');\n      pawnInput2.setAttribute('type', 'number');\n      pawnInput2.setAttribute('class', 'pawnInput');\n      pawnInput1.setAttribute('min', 0);\n      pawnInput1.setAttribute('max', this.state.boardInput - 1);\n      pawnInput2.setAttribute('id', 'pawnInput-' + i + '-1');\n\n      pawnDiv.appendChild(spanOpen);\n      pawnDiv.appendChild(pawnInput1);\n      pawnDiv.appendChild(comma);\n      pawnDiv.appendChild(pawnInput2);\n      pawnDiv.appendChild(spanClose);\n    }\n\n    var pawnBtn = document.createElement('button');\n    pawnBtn.setAttribute('class', 'ui button pawnBtn');\n    pawnBtn.innerText = 'Add pawn';\n    pawnBtn.onclick = () => this.onDrawPawn(pawn);\n    // pawnBtn.onclick = () => this.onDrawBoard(this.state.boardInput);\n\n    pawnDiv.appendChild(pawnBtn);\n  }\n\n  onDrawBoard = (board, arrX, arrY, result) => {\n\n    var canvas = document.getElementById(\"board\");\n    var ctx = canvas.getContext(\"2d\");\n\n    canvas.width  = board * size;\n    canvas.height = board * size; \n\n    // board\n    for (var i = 0; i < board; i++) {\n\n      ctx.moveTo(0, size * i);\n      ctx.lineTo(size * board, size * i);\n\n      ctx.moveTo(size * i, 0);\n      ctx.lineTo(size * i, size * board);\n\n      // location\n      for (var j = 0; j <= board; j++) {\n\n        ctx.font = \"10px Noto Sans KR, sans-serif\";\n        ctx.fillText('(' + (j-1) + ', ' + i + ')', size * i + 25, size * j - 30);\n\n        // if (j === 0 && i === 0) ctx.fillRect(size * i, size * j, size, size);\n        // if (j === 1 && i === 2) ctx.fillRect(size * i, size * j, size, size);\n        // if (j === 2 && i === 3) ctx.fillRect(size * i, size * j, size, size);\n      }\n    }\n\n    // draw pawn\n    if (arrX !== undefined && arrY !== undefined) {\n      \n      document.getElementById('visualize').style.display = 'inline-block';\n      for (var n = 0; n < this.state.pawnInput; n++) {\n\n          if (arrX.length > 0 && arrY.length > 0) {\n            ctx.fillStyle = \"#ffaa00\"; //orange\n            ctx.fillRect(size * arrY[n], size * arrX[n], size, size);\n          }\n        \n      }\n    }\n\n    // draw result\n    if (result !== undefined) {\n\n      var y = 0;\n\n      var animation = setInterval(() => {\n          ctx.fillStyle = \"#ff3300\"; //red\n          // var cr = 'rgb('+\n          //   Math.floor(Math.random()*256)+','+\n          //   Math.floor(Math.random()*256)+','+\n          //   Math.floor(Math.random()*256)+')';\n\n          // ctx.fillStyle = cr;\n\n          ctx.fillRect(size * result[y][1], size * result[y][0], size, size);\n          y++;\n\n          if (y >= result.length) {\n              clearInterval(animation);\n          }\n      }, 500);\n\n    }\n\n    \n    ctx.moveTo(0, size * board);\n    ctx.lineTo(size * board, size * board);\n\n    ctx.moveTo(size * board, 0);\n    ctx.lineTo(size * board, size * board);\n\n    ctx.strokeStyle = \"#000000\";\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  }\n\n  onShowResult = (result) => {\n    // show result\n    var resultDiv = document.getElementById('result');\n\n    // remove all results before rendering new results\n    while (resultDiv.childNodes.length > 1) {\n      resultDiv.removeChild(resultDiv.lastChild);\n    }\n\n    resultDiv.style.display = 'block';\n\n    var count = document.createElement('div');\n    count.innerText = result.length - this.state.pawnInput;\n    resultDiv.appendChild(count);\n\n    result.forEach((item) => {\n      var data = document.createElement('div');\n      data.innerText = '[' + item[0] + ', ' + item[1] + ']';\n      resultDiv.appendChild(data);\n    });\n  }\n\n  onVisualClick = (arrX, arrY) => {\n\n    var total = [];\n    var start = [];\n    var end = [];\n    result = [];\n\n    arrX.push(arrX[0]);\n    arrY.push(arrY[0]);\n\n    // start.push(arrX[0], arrY[0]); // 노드 2개라고 가정\n    // end.push(arrX[1], arrY[1]);\n\n\n    // loop start\n    for (var i = 0; i < arrX.length-1; i++) {\n\n      start.push(arrX[i], arrY[i]);\n      end.push(arrX[i+1], arrY[i+1]);\n\n      if (start[0] < end[0] && start[1] < end[1]) { \n        for (var n = start[0]; n <= end[0]; n++) {\n          for (var m = start[1]; m <= end[1]; m++) {\n            total.push([n, m]);\n          }\n        }\n      }\n      else if (start[0] < end[0] && start[1] > end[1]) { \n        for (var n = start[0]; n <= end[0]; n++) {\n          for (var m = end[1]; m <= start[1]; m++) {\n            total.push([n, m]);\n          }\n        }\n      }\n      else if (start[0] > end[0] && start[1] < end[1]) { \n        for (var n = end[0]; n <= start[0]; n++) {\n          for (var m = start[1]; m <= end[1]; m++) {\n            total.push([n, m]);\n          }\n        }\n      }\n      else if (start[0] > end[0] && start[1] > end[1]) { \n        for (var n = end[0]; n <= start[0]; n++) {\n          for (var m = end[1]; m <= start[1]; m++) {\n            total.push([n, m]);\n          }\n        }\n      }\n\n\n      else if (start[0] === end[0] && start[1] !== end[1] && start[1] < end[1]) {\n        for (var n = start[1]; n <= end[1]; n++) {\n          result.push([start[0], n]);\n        }\n      }\n      else if (start[0] === end[0] && start[1] !== end[1] && start[1] > end[1]) {\n        for (var n = start[1]; n >= end[1]; n--) {\n          result.push([start[0], n]);\n        }\n      }\n      else if (start[0] !== end[0] && start[1] === end[1] && start[0] < end[0]) {\n        for (var n = start[0]; n <= end[0]; n++) {\n          result.push([n, start[1]]);\n        }\n      }\n      else if (start[0] !== end[0] && start[1] === end[1] && start[0] > end[0]) {\n        for (var n = start[0]; n >= end[0]; n--) {\n          result.push([n, start[1]]);\n        }\n      }\n\n      if (total.length > 0)\n        this.AstarAlgorithm(total, start, end);\n\n      start = [];\n      end = [];\n      total = [];\n\n    }\n    // loop end\n\n      if (result.length > 0) {\n        this.onDrawBoard(this.state.boardInput, this.state.pawnArrX, this.state.pawnArrY, result);\n        this.onShowResult(result);\n      }\n\n      result = [];    \n\n  }\n\n  AstarAlgorithm = (total, start, end) => {\n\n    var totalArr = total;\n    var current = [];\n    var open = [];\n    var close = [];\n\n    var minmin = 0;\n\n    var execute;\n\n    // total - start\n    for (var i = 0; i < totalArr.length; i++) {\n      if (totalArr[i][0] === start[0] && totalArr[i][1] === start[1]) {\n        totalArr.splice(i, 1);\n      }\n    }\n\n    current = start;\n    close.push(start);\n\n    // loop start\n    while (current !== end) {\n\n      for (var a = -1; a <= 1; a++) {\n        for (var b = -1; b <= 1; b++) {\n\n          for (var c = 0; c < totalArr.length; c++) {\n            if (totalArr[c][0] === current[0]+a && totalArr[c][1] === current[1]+b) {\n              open.push([current[0]+a, current[1]+b]);\n              totalArr.splice(c, 1); // total - open\n            }\n          }\n          \n        }\n      }\n\n      // if open includes end, execute = false\n      for (var f = 0; f < open.length; f++) {\n        if (open[f][0] === end[0] && open[f][1] === end[1]) {\n          close.push(end);\n          current = end;\n          execute = false;\n          break;\n        }\n        else execute = true;\n      }\n\n\n\n      if (execute) {\n        \n        current = [];\n        var min = [];\n\n          for (var d = 0; d < open.length; d++) { \n            open[d].push(Math.abs(end[0] - open[d][0]) + Math.abs(end[1] - open[d][1]));\n\n            min.push(open[d][2]);\n            minmin = Math.min(...min);\n          }\n\n          for (var e = 0; e < open.length; e++) {\n            if (minmin === open[e][2]) {\n              if (current.length === 0) {\n                current.push(open[e][0], open[e][1]);\n                open = [];\n                close.push(current);\n              }\n            }\n          }\n\n          minmin = 0;\n      }\n\n    }\n    // loop end\n\n    // console.log(totalArr);\n    // console.log(current);\n    // console.log(open);\n\n    // close.pop(); // remove the last value of close array\n    // console.log(close);\n    result.push(...close);\n    // console.log(result);\n\n    this.onDrawBoard(this.state.boardInput, this.state.pawnArrX, this.state.pawnArrY, result);\n    this.onShowResult(result);\n\n  }\n\n  render() {\n\n    // var boardInput = this.state.boardInput;\n    // var pawnInput = this.state.pawnInput;\n\n    return (\n      <div className='grid'>\n        <div>\n          <div>\n            <span className='title'>Board Size</span>\n            <input type='number' className='input marginRight' onChange={this.onInputChange.bind(this, 'board')} />\n            <span className='title'>Number of pawn</span>\n            <input type='number' className='input marginRight' onChange={this.onInputChange.bind(this, 'pawn')} />\n            {/* <button className=\"ui button\" onClick={() => this.onAddPawn(pawnInput)}>Enter</button> */}\n          </div>\n\n          <div id='pawnDiv'></div>\n\n          <canvas id=\"board\" />\n          <span><button id='visualize' className=\"ui button\" onClick={() => this.onVisualClick(this.state.pawnArrX, this.state.pawnArrY)}>Find path</button></span>\n        </div>\n\n        <div id='result'>\n          <span className='title'>Result</span>\n        </div>\n      </div>\n    );\n  }\n\n\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}